@model IEnumerable<dynamic>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            overflow-x: hidden;
            transition: opacity 0.5s ease-in-out;
            background-color:floralwhite;
        }

        .fade-out {
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }



    </style>
</head>
<body>
    <div class="container">
        <h2 style="text-align:center; margin-top:2%;">Your daily listening statistics</h2>
        <p style="text-align:center;">The chart below summarises how much you listened to music categorized by the days of the week</p>
        <div>
            <canvas id="dailyChart"></canvas>
        </div>
        <h6 style="margin-top:5%; text-align:center;">Scroll up to go back to the hours page.</h6>
        <br /><br />
    </div>
    <footer>
        
    </footer>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            var ctx = document.getElementById('dailyChart').getContext('2d');

            var daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

            var dayLabels = @Html.Raw(Json.Serialize(Model.Select(m => m.DayOfWeek)));
            var labels = dayLabels.map(dayNum => daysOfWeek[dayNum]);
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Listening Time (minutes)',
                        data: @Html.Raw(Json.Serialize(Model.Select(m => m.TotalListeningTime / 60))),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            window.onscroll = function () {
                if (window.scrollY === 0) {
                    document.body.classList.add('fade-out');
                    setTimeout(function () {
                        window.location.href = '@Url.Action("Hours", "ListeningHistories")';
                    }, 500); 
                }
            };
        </script>
    }
</body>
</html>

